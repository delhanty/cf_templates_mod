Description: >
    This template deploys a VPC, with a public and private subnet. 
    It deploys an Internet Gateway, with a default route on the public subnet. 
    It deploys a NAT Gateway and default routes for the private subnet.
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Default: dev 
        AllowedValues: 
            - dev
            - qa
            - prod
        Type: String

    AvailabilityZone1:
        Description: The availability zone which will be assigned to the first subnet
        Type: AWS::EC2::AvailabilityZone::Name
        Default: us-east-1a

    AvailabilityZone2:
        Description: The availability zone which will be assigned to the second subnet
        Type: AWS::EC2::AvailabilityZone::Name
        Default: us-east-1b

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.1.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.1.1.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.1.2.0/24
        
    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.1.128.0/19

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.1.160.0/19

Resources:
    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} VPC

    VpcCidrBlockIpv6:
        Type: AWS::EC2::VPCCidrBlock
        Properties:
            AmazonProvidedIpv6CidrBlock: true
            VpcId: !Ref VPC

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Internet Gateway
    
    EgressOnlyInternetGateway:
        Type: AWS::EC2::EgressOnlyInternetGateway
        Properties: 
            VpcId: !Ref VPC

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        DependsOn: VpcCidrBlockIpv6
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Ref AvailabilityZone1
            CidrBlock: !Ref PublicSubnet1CIDR
            Ipv6CidrBlock: 
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: '01::/64'
                      VpcPart: !Select [ 0, !Split [ '00::/56', !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks ]]]
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PublicSubnet2: 
        Type: AWS::EC2::Subnet
        DependsOn: VpcCidrBlockIpv6
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Ref AvailabilityZone2
            CidrBlock: !Ref PublicSubnet2CIDR
            Ipv6CidrBlock: 
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: '02::/64'
                      VpcPart: !Select [ 0, !Split [ '00::/56', !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks ]]]
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnetIpv6Route:
        Type: "AWS::EC2::Route"
        DependsOn: 
        - DefaultPublicRoute
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationIpv6CidrBlock: "::/0"
            EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    # Start Private Subnet Configurations
    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Ref AvailabilityZone1
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    PrivateSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Ref AvailabilityZone2
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)
    
    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    S3VPCEndpoint:
        Type: AWS::EC2::VPCEndpoint
        Properties:
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal: '*'
                      Action:
                        - 's3:GetObject'
                        - 's3:List*'
                        - 's3:Put*'
                      Resource:
                        - 'arn:aws:s3:::*'
            RouteTableIds:
                - !Ref PrivateRouteTable1
                - !Ref PrivateRouteTable2
            ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
            VpcId: !Ref VPC

Outputs: 
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export: 
            Name: !Sub ${EnvironmentName}-VPC

    VPCCIDR:
        Description: A reference to the crated VPC Cidr block
        Value: !GetAtt VPC.CidrBlock 
        Export: 
            Name: !Sub ${EnvironmentName}-VPCCIDR

    PublicSubnets:
        Description: A list of the AM public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export: 
            Name: !Sub ${EnvironmentName}-PublicSubnets

    PublicSubnet1:
        Description: A reference to the AM public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet1

    PublicSubnet2:
        Description: A reference to the AM public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet2

    PublicSubnet1CIDR:
        Description: A reference to the AM public subnet in the 1st Availability Zone CIDR
        Value: !Ref PublicSubnet1CIDR
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet1CIDR

    PublicSubnet2CIDR:
        Description: A reference to the AM public subnet in the 1st Availability Zone CIDR
        Value: !Ref PublicSubnet2CIDR
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet2CIDR

    VpcCidrBlockIpv6:
        Description: A reference to the IPv6 CidrBlocks
        Value: !Select [ 0, !GetAtt VPC.Ipv6CidrBlocks ]
        Export:
            Name: !Sub '${EnvironmentName}-Ipv6CidrBlock'

    PublicSubnet1IPv6CidrBlocks:
        Value: !Select [ 0, !GetAtt PublicSubnet1.Ipv6CidrBlocks ]
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet1IPv6
    
    PublicSubnet2IPv6CidrBlocks:
        Value: !Select [ 0, !GetAtt PublicSubnet2.Ipv6CidrBlocks ]
        Export:
            Name: !Sub ${EnvironmentName}-PublicSubnet2IPv6

    PrivateSubnets:
        Description: A list of the AM private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export: 
            Name: !Sub ${EnvironmentName}-PrivateSubnets

    PrivateSubnet1:
        Description: A reference to the AM private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1
        Export: 
            Name: !Sub ${EnvironmentName}-PrivateSubnet1

    PrivateSubnet2:
        Description: A reference to the AM private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet2
        Export: 
            Name: !Sub ${EnvironmentName}-PrivateSubnet2

    PrivateSubnet1CIDR:
        Description: A reference to the AM private subnet in the 1st Availability Zone CIDR
        Value: !Ref PrivateSubnet1CIDR
        Export:
            Name: !Sub ${EnvironmentName}-PrivateSubnet1CIDR

    PrivateSubnet2CIDR:
        Description: A reference to the AM public subnet in the 1st Availability Zone CIDR
        Value: !Ref PrivateSubnet2CIDR
        Export:
            Name: !Sub ${EnvironmentName}-PrivateSubnet2CIDR